	 	 instructionsRAM[4672] <= 32'b01101100000000000000000000000000;//Nop
	 	 instructionsRAM[4673] <= 32'b01010100000000000000000000000010;//Jump to #2
	 	 instructionsRAM[4674] <= 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4675] <= 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4676] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4677] <= 32'b01100100111000000000000000000010;//Store r[7] in m[#2]
	 	 instructionsRAM[4678] <= 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4679] <= 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4680] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4681] <= 32'b01100100111000000000000000000011;//Store r[7] in m[#3]
	 	 instructionsRAM[4682] <= 32'b01100000011000000000000000000010;//Load m[#2] to r[3]
	 	 instructionsRAM[4683] <= 32'b01100000100000000000000000000011;//Load m[#3] to r[4]
	 	 instructionsRAM[4684] <= 32'b01011100001000110010000000000000;//SLT if r[3] < r[4], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4685] <= 32'b01011100011001000001100000000000;//SLT if r[4] < r[3], r[3] = 1 else r[3] = 0
	 	 instructionsRAM[4686] <= 32'b00100100001000010001100000000000;//OR r[1],r[3] to r[1]
	 	 instructionsRAM[4687] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4688] <= 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4689] <= 32'b01001100000000000000000000010110;//Branch on Zero #22
	 	 instructionsRAM[4690] <= 32'b01100000011000000000000000000011;//Load m[#3] to r[3]
	 	 instructionsRAM[4691] <= 32'b00001100001000110000000000000001;//SUBi r[3], #1 to r[1]
	 	 instructionsRAM[4692] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4693] <= 32'b01100000011000000000000000000010;//Load m[#2] to r[3]
	 	 instructionsRAM[4694] <= 32'b00000100100001110000000000000000;//ADDi r[7], #0 to r[4]
	 	 instructionsRAM[4695] <= 32'b01011100001000110010000000000000;//SLT if r[3] < r[4], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4696] <= 32'b00110100001000010000000000000000;//NOT r[1] to r[1]
	 	 instructionsRAM[4697] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4698] <= 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4699] <= 32'b01001100000000000000000000000110;//Branch on Zero #6
	 	 instructionsRAM[4700] <= 32'b01100000011000000000000000000010;//Load m[#2] to r[3]
	 	 instructionsRAM[4701] <= 32'b01100000100000000000000000000011;//Load m[#3] to r[4]
	 	 instructionsRAM[4702] <= 32'b00001000001000110010000000000000;//SUB r[3],r[4] to r[1]
	 	 instructionsRAM[4703] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4704] <= 32'b01100100111000000000000000000010;//Store r[7] in m[#2]
	 	 instructionsRAM[4705] <= 32'b01010100000000000000000000100111;//Jump to #39
	 	 instructionsRAM[4706] <= 32'b01100000011000000000000000000011;//Load m[#3] to r[3]
	 	 instructionsRAM[4707] <= 32'b01100000100000000000000000000010;//Load m[#2] to r[4]
	 	 instructionsRAM[4708] <= 32'b00001000001000110010000000000000;//SUB r[3],r[4] to r[1]
	 	 instructionsRAM[4709] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4710] <= 32'b01100100111000000000000000000011;//Store r[7] in m[#3]
	 	 instructionsRAM[4711] <= 32'b01010100000000000000000000001010;//Jump to #10
	 	 instructionsRAM[4712] <= 32'b01100000001000000000000000000010;//Load m[#2] to r[1]
	 	 instructionsRAM[4713] <= 32'b10000000001000000000000000000000;//Output r[1]
	 	 instructionsRAM[4714] <= 32'b10000000001000000000000000000000;//Output r[1]
	 	 instructionsRAM[4715] <= 32'b01110000000000000000000000000000;//Hlt


	 	 instructionsRAM[4288] = 32'b01101100000000000000000000000000;//Nop
	 	 instructionsRAM[4289] = 32'b01010100000000000000000000101000;//Jump to #40
	 	 instructionsRAM[4290] = 32'b01101000001000000000000000000000;//Loadi #0 to r[1]
	 	 instructionsRAM[4291] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4292] = 32'b01100100111000000000000000001110;//Store r[7] in m[#14]
	 	 instructionsRAM[4293] = 32'b01101000001000000000000000000000;//Loadi #0 to r[1]
	 	 instructionsRAM[4294] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4295] = 32'b01100100111000000000000000001111;//Store r[7] in m[#15]
	 	 instructionsRAM[4296] = 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4297] = 32'b01100000100000000000000000001001;//Load m[#9] to r[4]
	 	 instructionsRAM[4298] = 32'b01011100001000110010000000000000;//SLT if r[3] < r[4], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4299] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4300] = 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4301] = 32'b01001100000000000000000000010100;//Branch on Zero #20
	 	 instructionsRAM[4302] = 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4303] = 32'b00000100100000110000000000001010;//ADDi r[3], #10 to r[4]
	 	 instructionsRAM[4304] = 32'b10000100001001000000000000000000;//Loadr m[r[4]] to r[1]
	 	 instructionsRAM[4305] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4306] = 32'b00000100011001110000000000000000;//ADDi r[7], #0 to r[3]
	 	 instructionsRAM[4307] = 32'b01100000100000000000000000001111;//Load m[#15] to r[4]
	 	 instructionsRAM[4308] = 32'b01011100001001000001100000000000;//SLT if r[4] < r[3], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4309] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4310] = 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4311] = 32'b01001100000000000000000000000101;//Branch on Zero #5
	 	 instructionsRAM[4312] = 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4313] = 32'b00000100100000110000000000001010;//ADDi r[3], #10 to r[4]
	 	 instructionsRAM[4314] = 32'b10000100001001000000000000000000;//Loadr m[r[4]] to r[1]
	 	 instructionsRAM[4315] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4316] = 32'b01100100111000000000000000001111;//Store r[7] in m[#15]
	 	 instructionsRAM[4317] = 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4318] = 32'b00000100001000110000000000000001;//ADDi r[3], #1 to r[1]
	 	 instructionsRAM[4319] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4320] = 32'b01100100111000000000000000001110;//Store r[7] in m[#14]
	 	 instructionsRAM[4321] = 32'b01010100000000000000000000001000;//Jump to #8
	 	 instructionsRAM[4322] = 32'b01100000001000000000000000001111;//Load m[#15] to r[1]
	 	 instructionsRAM[4323] = 32'b00000110001000010000000000000000;//ADDi r[1], #0 to r[17]
	 	 instructionsRAM[4324] = 32'b10000100001100100000000000000000;//Loadr m[r[18]] to r[1]
	 	 instructionsRAM[4325] = 32'b10001100000000010000000000000000;//Jump to r[1]
	 	 instructionsRAM[4326] = 32'b10000100001100100000000000000000;//Loadr m[r[18]] to r[1]
	 	 instructionsRAM[4327] = 32'b10001100000000010000000000000000;//Jump to r[1]
	 	 instructionsRAM[4328] = 32'b01101000001000000000000000000011;//Loadi #3 to r[1]
	 	 instructionsRAM[4329] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4330] = 32'b01100100111000000000000000000110;//Store r[7] in m[#6]
	 	 instructionsRAM[4331] = 32'b01101000001000000000000000000000;//Loadi #0 to r[1]
	 	 instructionsRAM[4332] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4333] = 32'b01100100111000000000000000000111;//Store r[7] in m[#7]
	 	 instructionsRAM[4334] = 32'b01100000011000000000000000000111;//Load m[#7] to r[3]
	 	 instructionsRAM[4335] = 32'b01100000100000000000000000000110;//Load m[#6] to r[4]
	 	 instructionsRAM[4336] = 32'b01011100001000110010000000000000;//SLT if r[3] < r[4], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4337] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4338] = 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4339] = 32'b01001100000000000000000000001011;//Branch on Zero #11
		 instructionsRAM[4159] = 32'b01111000000000000000000000000000;//Preio
	 	 instructionsRAM[4341] = 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4342] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4343] = 32'b01100000011000000000000000000111;//Load m[#7] to r[3]
	 	 instructionsRAM[4344] = 32'b00000100100000110000000000000010;//ADDi r[3], #2 to r[4]
	 	 instructionsRAM[4345] = 32'b10001000111001000000000000000000;//rStore to r[7] in m[r[4]]
	 	 instructionsRAM[4346] = 32'b01100000011000000000000000000111;//Load m[#7] to r[3]
	 	 instructionsRAM[4347] = 32'b00000100001000110000000000000001;//ADDi r[3], #1 to r[1]
	 	 instructionsRAM[4348] = 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4349] = 32'b01100100111000000000000000000111;//Store r[7] in m[#7]
	 	 instructionsRAM[4350] = 32'b01010100000000000000000000101110;//Jump to #46
	 	 instructionsRAM[4351] = 32'b01100000001000000000000000000010;//Load m[#2] to r[1]
	 	 instructionsRAM[4352] = 32'b01100000001000000000000000000010;//Load m[#2] to r[1]
	 	 instructionsRAM[4353] = 32'b01100100001000000000000000001010;//Store r[1] in m[#10]
	 	 instructionsRAM[4354] = 32'b01100000001000000000000000000011;//Load m[#3] to r[1]
	 	 instructionsRAM[4355] = 32'b01100100001000000000000000001011;//Store r[1] in m[#11]
	 	 instructionsRAM[4356] = 32'b01100000001000000000000000000100;//Load m[#4] to r[1]
	 	 instructionsRAM[4357] = 32'b01100100001000000000000000001100;//Store r[1] in m[#12]
	 	 instructionsRAM[4358] = 32'b01100000001000000000000000000101;//Load m[#5] to r[1]
	 	 instructionsRAM[4359] = 32'b01100100001000000000000000001101;//Store r[1] in m[#13]
	 	 instructionsRAM[4360] = 32'b01100000001000000000000000000110;//Load m[#6] to r[1]
	 	 instructionsRAM[4361] = 32'b01100100001000000000000000001001;//Store r[1] in m[#9]
	 	 instructionsRAM[4362] = 32'b01101010010000000000000000010001;//Loadi #17 to r[18]
	 	 instructionsRAM[4363] = 32'b00000110010100100000000000000001;//ADDi r[18], #1 to r[18]
	 	 instructionsRAM[4364] = 32'b01101000001000000000000001001111;//Loadi #79 to r[1]
	 	 instructionsRAM[4365] = 32'b10001000001100100000000000000000;//rStore to r[1] in m[r[18]]
	 	 instructionsRAM[4366] = 32'b01010100000000000000000000000010;//Jump to #2
	 	 instructionsRAM[4367] = 32'b00001110010100100000000000000001;//SUBi r[18], #1 to r[18]
	 	 instructionsRAM[4368] = 32'b01100000001000000000000000001010;//Load m[#10] to r[1]
	 	 instructionsRAM[4369] = 32'b01100100001000000000000000000010;//Store r[1] in m[#2]
	 	 instructionsRAM[4370] = 32'b01100000001000000000000000001011;//Load m[#11] to r[1]
	 	 instructionsRAM[4371] = 32'b01100100001000000000000000000011;//Store r[1] in m[#3]
	 	 instructionsRAM[4372] = 32'b01100000001000000000000000001100;//Load m[#12] to r[1]
	 	 instructionsRAM[4373] = 32'b01100100001000000000000000000100;//Store r[1] in m[#4]
	 	 instructionsRAM[4374] = 32'b01100000001000000000000000001101;//Load m[#13] to r[1]
	 	 instructionsRAM[4375] = 32'b01100100001000000000000000000101;//Store r[1] in m[#5]
	 	 instructionsRAM[4376] = 32'b00000100001000000000000000000000;//ADDi r[0], #0 to r[1]
	 	 instructionsRAM[4377] = 32'b01111000000000000000000000000000;//preio
	 	 instructionsRAM[4378] = 32'b10000000001000000000000000000000;//Output r[1]
	 	 instructionsRAM[4379] = 32'b01110000000000000000000000000000;//Hlt

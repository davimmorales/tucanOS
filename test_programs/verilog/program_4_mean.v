	 	 instructionsRAM[4864] <= 32'b01101100000000000000000000000000;//Nop
	 	 instructionsRAM[4865] <= 32'b01010100000000000000000000100100;//Jump to #36
	 	 instructionsRAM[4866] <= 32'b01101000001000000000000000000000;//Loadi #0 to r[1]
	 	 instructionsRAM[4867] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4868] <= 32'b01100100111000000000000000001111;//Store r[7] in m[#15]
	 	 instructionsRAM[4869] <= 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4870] <= 32'b01100000100000000000000000001001;//Load m[#9] to r[4]
	 	 instructionsRAM[4871] <= 32'b01011100001000110010000000000000;//SLT if r[3] < r[4], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4872] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4873] <= 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4874] <= 32'b01001100000000000000000000001110;//Branch on Zero #14
	 	 instructionsRAM[4875] <= 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4876] <= 32'b00000100100000110000000000001010;//ADDi r[3], #10 to r[4]
	 	 instructionsRAM[4877] <= 32'b10000100001001000000000000000000;//Loadr m[r[4]] to r[1]
	 	 instructionsRAM[4878] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4879] <= 32'b01100000011000000000000000001111;//Load m[#15] to r[3]
	 	 instructionsRAM[4880] <= 32'b00000100100001110000000000000000;//ADDi r[7], #0 to r[4]
	 	 instructionsRAM[4881] <= 32'b00000000001000110010000000000000;//ADD r[3],r[4] to r[1]
	 	 instructionsRAM[4882] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4883] <= 32'b01100100111000000000000000001111;//Store r[7] in m[#15]
	 	 instructionsRAM[4884] <= 32'b01100000011000000000000000001110;//Load m[#14] to r[3]
	 	 instructionsRAM[4885] <= 32'b00000100001000110000000000000001;//ADDi r[3], #1 to r[1]
	 	 instructionsRAM[4886] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4887] <= 32'b01100100111000000000000000001110;//Store r[7] in m[#14]
	 	 instructionsRAM[4888] <= 32'b01010100000000000000000000000101;//Jump to #5
	 	 instructionsRAM[4889] <= 32'b01100000011000000000000000001111;//Load m[#15] to r[3]
	 	 instructionsRAM[4890] <= 32'b01100000100000000000000000001001;//Load m[#9] to r[4]
	 	 instructionsRAM[4891] <= 32'b00010100001000110010000000000000;//DIVIDE r[3],r[4] to r[1]
	 	 instructionsRAM[4892] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4893] <= 32'b01100100111000000000000000001111;//Store r[7] in m[#15]
	 	 instructionsRAM[4894] <= 32'b01100000001000000000000000001111;//Load m[#15] to r[1]
	 	 instructionsRAM[4895] <= 32'b00000110001000010000000000000000;//ADDi r[1], #0 to r[17]
	 	 instructionsRAM[4896] <= 32'b10000100001100100000000000000000;//Loadr m[r[18]] to r[1]
	 	 instructionsRAM[4897] <= 32'b10001100000000010000000000000000;//Jump to r[1]
	 	 instructionsRAM[4898] <= 32'b10000100001100100000000000000000;//Loadr m[r[18]] to r[1]
	 	 instructionsRAM[4899] <= 32'b10001100000000010000000000000000;//Jump to r[1]
	 	 instructionsRAM[4900] <= 32'b01101000001000000000000000000011;//Loadi #3 to r[1]
	 	 instructionsRAM[4901] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4902] <= 32'b01100100111000000000000000000110;//Store r[7] in m[#6]
	 	 instructionsRAM[4903] <= 32'b01101000001000000000000000000000;//Loadi #0 to r[1]
	 	 instructionsRAM[4904] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4905] <= 32'b01100100111000000000000000000111;//Store r[7] in m[#7]
	 	 instructionsRAM[4906] <= 32'b01100000011000000000000000000111;//Load m[#7] to r[3]
	 	 instructionsRAM[4907] <= 32'b01100000100000000000000000000110;//Load m[#6] to r[4]
	 	 instructionsRAM[4908] <= 32'b01011100001000110010000000000000;//SLT if r[3] < r[4], r[1] = 1 else r[1] = 0
	 	 instructionsRAM[4909] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4910] <= 32'b01111100000001110000000000000000;//Pre Branch r[7]
	 	 instructionsRAM[4911] <= 32'b01001100000000000000000000001011;//Branch on Zero #11
	 	 instructionsRAM[4912] <= 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4913] <= 32'b01110100001000000000000000000000;//Input to r[1]
	 	 instructionsRAM[4914] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4915] <= 32'b01100000011000000000000000000111;//Load m[#7] to r[3]
	 	 instructionsRAM[4916] <= 32'b00000100100000110000000000000010;//ADDi r[3], #2 to r[4]
	 	 instructionsRAM[4917] <= 32'b10001000111001000000000000000000;//rStore to r[7] in m[r[4]] 
	 	 instructionsRAM[4918] <= 32'b01100000011000000000000000000111;//Load m[#7] to r[3]
	 	 instructionsRAM[4919] <= 32'b00000100001000110000000000000001;//ADDi r[3], #1 to r[1]
	 	 instructionsRAM[4920] <= 32'b00000100111000010000000000000000;//ADDi r[1], #0 to r[7]
	 	 instructionsRAM[4921] <= 32'b01100100111000000000000000000111;//Store r[7] in m[#7]
	 	 instructionsRAM[4922] <= 32'b01010100000000000000000000101010;//Jump to #42
	 	 instructionsRAM[4923] <= 32'b01100000001000000000000000000010;//Load m[#2] to r[1]
	 	 instructionsRAM[4924] <= 32'b01100000001000000000000000000010;//Load m[#2] to r[1]
	 	 instructionsRAM[4925] <= 32'b01100100001000000000000000001010;//Store r[1] in m[#10]
	 	 instructionsRAM[4926] <= 32'b01100000001000000000000000000011;//Load m[#3] to r[1]
	 	 instructionsRAM[4927] <= 32'b01100100001000000000000000001011;//Store r[1] in m[#11]
	 	 instructionsRAM[4928] <= 32'b01100000001000000000000000000100;//Load m[#4] to r[1]
	 	 instructionsRAM[4929] <= 32'b01100100001000000000000000001100;//Store r[1] in m[#12]
	 	 instructionsRAM[4930] <= 32'b01100000001000000000000000000101;//Load m[#5] to r[1]
	 	 instructionsRAM[4931] <= 32'b01100100001000000000000000001101;//Store r[1] in m[#13]
	 	 instructionsRAM[4932] <= 32'b01100000001000000000000000000110;//Load m[#6] to r[1]
	 	 instructionsRAM[4933] <= 32'b01100100001000000000000000001001;//Store r[1] in m[#9]
	 	 instructionsRAM[4934] <= 32'b01101010010000000000000000010001;//Loadi #17 to r[18]
	 	 instructionsRAM[4935] <= 32'b00000110010100100000000000000001;//ADDi r[18], #1 to r[18]
	 	 instructionsRAM[4936] <= 32'b01101000001000000000000001001011;//Loadi #75 to r[1]
	 	 instructionsRAM[4937] <= 32'b10001000001100100000000000000000;//rStore to r[1] in m[r[18]] 
	 	 instructionsRAM[4938] <= 32'b01010100000000000000000000000010;//Jump to #2
	 	 instructionsRAM[4939] <= 32'b00001110010100100000000000000001;//SUBi r[18], #1 to r[18]
	 	 instructionsRAM[4940] <= 32'b01100000001000000000000000001010;//Load m[#10] to r[1]
	 	 instructionsRAM[4941] <= 32'b01100100001000000000000000000010;//Store r[1] in m[#2]
	 	 instructionsRAM[4942] <= 32'b01100000001000000000000000001011;//Load m[#11] to r[1]
	 	 instructionsRAM[4943] <= 32'b01100100001000000000000000000011;//Store r[1] in m[#3]
	 	 instructionsRAM[4944] <= 32'b01100000001000000000000000001100;//Load m[#12] to r[1]
	 	 instructionsRAM[4945] <= 32'b01100100001000000000000000000100;//Store r[1] in m[#4]
	 	 instructionsRAM[4946] <= 32'b01100000001000000000000000001101;//Load m[#13] to r[1]
	 	 instructionsRAM[4947] <= 32'b01100100001000000000000000000101;//Store r[1] in m[#5]
	 	 instructionsRAM[4948] <= 32'b00000100001000000000000000000000;//ADDi r[0], #0 to r[1]
	 	 instructionsRAM[4949] <= 32'b10000000001000000000000000000000;//Output r[1]
	 	 instructionsRAM[4950] <= 32'b10000000001000000000000000000000;//Output r[1]
	 	 instructionsRAM[4951] <= 32'b01110000000000000000000000000000;//Hlt

